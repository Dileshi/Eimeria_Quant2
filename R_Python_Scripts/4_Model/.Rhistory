library(readr)
E64_total <- read_csv("~/Documents/GitHub/Eimeria_Quant2/E64_total.csv")
View(E64_total)
library(tidyverse)
library(ggeffects)
########PLOT Distrubution plot for E64_Prim, E88_Prim, E64_Secon
## filter(E64_total, dpi%in%c(3, 4, 5, 6, 7, 8)) %>%
E64_total$dpi <- as.factor(E64_total$dpi)
E64_total$dpi <-fct_inseq(E64_total$dpi)
lm(log10(Genome_copies_gFaeces+1)~dpi+Variable, data=E64_total) -> E64_Model
##Distribution plot
#Genome
ggplot(E64_total,aes(y=log10(Genome_copies_gFaeces+1),x=Variable, color=dpi))+
geom_violin()+
geom_jitter(position=position_jitter(seed = 1, width = 0.2))+
geom_smooth(method="lm")
#OPG
ggplot(E64_total,aes(y=log10(OPG+1),x=Variable, color=dpi))+
geom_violin()+
geom_jitter()+
geom_smooth(method="lm")
summary(E64_Model)
##Distribution plot separated out into dpi
#Genome
legend_title <- "dpi"
ggplot(E64_total,aes(y=log10(Genome_copies_gFaeces+1),x=Variable, color=factor(dpi)))+
geom_violin()+
scale_color_manual(legend_title,values=c("#6CB4EE", "#0066B2", "#89CFF0","#318CE7","#1E90FF",
"#4D4DFF","#3457D5","#00BFFF","#2A52BE","#0CAFFF","#6495ED","#1F75FE"))+
stat_summary(fun.y =median, mult=1,
geom="pointrange", color="black")+
geom_jitter()+
facet_wrap(~dpi)+
labs(x="Infection", y="log10 (Genome copies/g Faeces + 1) (qPCR)")+
scale_fill_discrete(name = "dpi")+
geom_smooth(method="lm")
#OPG
ggplot(E64_total,aes(y=log10(OPG+1),x=Variable, color=factor(dpi)))+
geom_violin()+
scale_color_manual(legend_title, values=c("#73F440", "#67DC38", "#439323","#76BA31","#A4DE3F",
"#D4FB41","#96B83D","#A7DB42","#77B430","#73F440","#00D2A9","#38D279"))+
stat_summary(fun.y =median, mult=1,
geom="pointrange", color="black")+
geom_jitter()+
facet_wrap(~dpi)+
labs(x="Infection", y="log10 (Oocysts/g Faeces + 1) (Flotations)")+
geom_smooth(method="lm")
#weightloss
ggplot(E64_total,aes(y=weightloss,x=Variable, color=factor(dpi)))+
geom_violin()+
stat_summary(fun.y =median, mult=1,
geom="pointrange", color="black")+
scale_color_manual(legend_title, values=c("#E63A5F", "#ED5487", "#E03B72","#EF6668","#F6C0D2","#ED67B3","#EC49B2","#F195C6","#F080AA","#EC4395","#EC47A8","#EC407E"))+
geom_jitter()+
facet_wrap(~dpi)+
labs(x="Infection", y="Weight loss (%)")+
geom_smooth(method="lm")
################################################
#Residual plot
sdt <- E64_total
sdt%>%
filter(!(OPG== 0))%>%
filter(!(Genome_copies_gFaeces== 0))-> sdt.nozero
DNAbyOPG <- lm(log10(Genome_copies_gFaeces)~((log10(OPG)*Variable)),
data = sdt.nozero, na.action = na.exclude)
summary(DNAbyOPG)
### Plot and extract estimates
require(sjPlot)
sdt.nozero$predictedM1 <- predict(DNAbyOPG)   # Save the predicted values
sdt.nozero$residualsM1 <- residuals(DNAbyOPG) # Save the residual values
summary(DNAbyOPG)
